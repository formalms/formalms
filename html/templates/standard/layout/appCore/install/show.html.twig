

  <div class="installer-container">
      <div class="installer-title">
          {{ Get_title({
          '#' : installerTitle
        },false) }}
      </div>
    <div id="installer-section">
        {% for stepNumber,step in steps %}
        <h3>{{ step }}</h3>
        <section>
            {% include 'partials/install/step' ~ stepNumber ~'.html.twig' %}
        </section>
        {% endfor %}
    </div>
  </div>

{% block scripts %}

   <script type="text/javascript" src="{{ Layout_getPath() }}script/jquery.steps.min.js"></script>

  
    <script>
     var startIndex = {{setValues.step|json_encode|raw}};
    let wizard = $("#installer-section").steps({
        headerTag: "h3",
        bodyTag: "section",
        transitionEffect: "slideLeft",
        autoFocus: true,
        stepsOrientation: $.fn.steps.stepsOrientation.vertical,
        startIndex: parseInt(startIndex),
          /* Labels */
        labels: {
            cancel: "Cancel",
            current: "current step:",
            pagination: "Pagination",
            finish: "Finish",
            next: {{ next|json_encode|raw }},
            previous: {{ back|json_encode|raw }},
            loading: {{ loading|json_encode|raw }}
        },
          onFinished: function (event, currentIndex) {
            finalize();
        },
         onStepChanging: function (event, currentIndex, newIndex) {
          if(newIndex > currentIndex) {
            var result = validateStep(currentIndex + 1);
            if(!result) {
              setData('step', currentIndex);
            } else {
              setData('step', newIndex);
            }

            return result;
          }
          //sto tornando indietro

       return true;
      }
    });

    
  
    </script>

      <script>

      function validateStep(index) {
        
        switch(index) {
          case 1:
            return checkPrerequisites();
          break;
          case 2:
            return checkDbSettingsAndUploadSettings();
          break;
          case 3:
            return checkAdminSettings();
          break;
          case 4:
            return checkSmtpSettings();
          break;
          default:
            return true;
            break;
        }
      }

      var busy = false; //acts like a 'mutex' so we have only one upload in progress at any given time
      var arr = []; // bucket in which we copy the file chunks to mark them later on (isComplete)
      var timer = 0;

      function currentArrIndex() {
        for (var i = 0; i < arr.length; i++) {
          if (arr[i].isComplete)
            continue;
        
          else 
            return i;
        }
      }

      function finalize() {
      
        let index = 1;
      
        $('.debug').val("Loading...");
        $('section.body').each(function() {
        
          arr.push({
            index: index,
            isComplete: false
          });
          
          index++;
        });

        timer = setTimeout(process, 1000);
      }     


      function process() {

         let response = {};
        if (busy) {
          //we might hit here if a file takes longer than the current setTimeout interval (1sec)
          timer = setTimeout(process, 1000); //re-queue timer
        } else {

          if (currentArrIndex() < arr.length) {
              let xhrIndex = currentArrIndex()
               let postData = {'check': arr[xhrIndex].index};
        
          // So when ajax completes we'd mark this item as done and turn off busy 
            // so next item of arr will get processed in timer's next 'alarm'

            busy = true; // mark it as busy
            $.ajax({
              type: "POST",
              data: postData,
              async: false,
              url: window.frontend.config.url.base + "/appCore/ajax.adm_server.php?r=adm/install/finalize",
              success: function (data) {
                console.log(data);
                response = JSON.parse(data);
                arr[xhrIndex].isComplete = true;
                busy = false;
           
                result = response.success;
            
              },
              error: function (e) {
              alert("Error: \n" + e.status + " - " + e.statusText);
              return false;
              },
              });

            timer = setTimeout(process, 1000); //re-queue timer
          } else {
            clearTimeout(timer);
          
          }
        }
        var $debug = $('.debug').val();
        
        $('.debug').val($debug + "\n" + response.messages.join("\n") + "\nLoading...");
        //When sent, figure out the percentage uploaded and update the progress bar
        var percentage = 100 / arr.length * (currentArrIndex() + 1);
        $('.progress-bar').css('width', percentage + '%');

      }

      function checkPrerequisites() {
          if($("#checkRequirements").val() && $('#agree').is(":checked")) {
            return true;
          } else {
          
            var postData = {};
            if(!$("#checkRequirements").val()) {
              postData.unsuitable_requirements = true;
            }
             if(!$('#agree').is(":checked")) {
              postData.missing_check = true;
            }
            console.log(postData);
            getErrorMessages(postData);
            return false;
          }
      }

      function checkDbSettingsAndUploadSettings() {
          let uploadsettings = true;
     
          if($("input[name=uploadMethod]:checked").val() == 'ftp') {
            uploadsettings = checkFtpConnection();
          } 

          if(uploadsettings) {

            //check db connection
              console.log(checkDbData());
              return checkDbData();
          } else {
            return false;
          }
      }

      function getErrorMessages(postData) {
        $.ajax({
            type: "POST",
            data: postData,
            url: window.frontend.config.url.base + "/appCore/ajax.adm_server.php?r=adm/install/getErrorMessages",
            success: function (data) {
              
                 var response = JSON.parse(data);
              console.log(response);
              let text = response.messages.join("\n");
              alert(text);
            },
            error: function (e) {
            alert("Error: \n" + e.status + " - " + e.statusText);
            return false;
            },
        });
      }

      function checkDbData() {
        var postData = {};
        var result = false;
        $("#database_data input").each(function(e) {
    
            postData[$(this).attr('name')] = $(this).val();
        });
           
        $.ajax({
            type: "POST",
            data: postData,
             async: false,
            url: window.frontend.config.url.base + "/appCore/ajax.adm_server.php?r=adm/install/checkDbData",
            success: function (data) {
              
              var response = JSON.parse(data);
              if(!response.success) {
                 let text = response.messages.join("\n");
                alert(text);
              }
            
              result = response.success;
             

            },
            error: function (e) {
            alert("Si è verificato un errore: \n" + e.status + " - " + e.statusText);
            return false;
            },
        });

        return result;
      }

      function checkFtpConnection() {
          
          let postData = {};
          var result = false;
          $("#ftp_data input").each(function(e) {
        
              postData[$(this).attr('name')] = $(this).val();
          });

           $.ajax({
            type: "POST",
            data: postData,
               async: false,
            url: window.frontend.config.url.base + "/appCore/ajax.adm_server.php?r=adm/install/checkFtp",
            success: function (data) {
              
              var response = JSON.parse(data);
              if(!response.success) {
                 let text = response.messages.join("\n");
                alert(text);
              }
             
             result = response.success;


            },
            error: function (e) {
            alert("Error: \n" + e.status + " - " + e.statusText);
            return false;
            },
        });

        return result;
         
      }


       function setData(key, value) {
          
        var postData = {
          [key] : value
        };
           
        $.ajax({
            type: "POST",
            data: postData,
            url: window.frontend.config.url.base + "/appCore/ajax.adm_server.php?r=adm/install/set",
            success: function (data) {
              
              var result = JSON.parse(data);
              if(result.success == true && key == 'sel_lang') {
                location.reload();
              } 
            },
            error: function (e) {
            alert("Si è verificato un errore: \n" + e.status + " - " + e.statusText);
            return false;
            },
        });
      }

       function checkAdminSettings() {
          let postData = {};
          var result = false;
          $("#adminPanel input").each(function(e) {
        
              postData[$(this).attr('name')] = $(this).val();
          });

           $.ajax({
            type: "POST",
            data: postData,
               async: false,
            url: window.frontend.config.url.base + "/appCore/ajax.adm_server.php?r=adm/install/checkAdminData",
            success: function (data) {
              
              var response = JSON.parse(data);
              if(!response.success) {
                 let text = response.messages.join("\n");
                alert(text);
              }
             
             result = response.success;


            },
            error: function (e) {
            alert("Error: \n" + e.status + " - " + e.statusText);
            return false;
            },
        });

        return result;
         
       }

          function checkSmtpSettings() {
          let postData = {};
          var result = false;

          if($("#useSmtp").val() == '0') {
             return true;
          } else {
            $("#smtpPanel .required").each(function(e) {
        
              postData[$(this).attr('name')] = $(this).val();
          });

           $.ajax({
            type: "POST",
            data: postData,
               async: false,
            url: window.frontend.config.url.base + "/appCore/ajax.adm_server.php?r=adm/install/checkSmtpData",
            success: function (data) {
              
              var response = JSON.parse(data);
              if(!response.success) {
                 let text = response.messages.join("\n");
                alert(text);
              }
             
             result = response.success;


            },
            error: function (e) {
            alert("Error: \n" + e.status + " - " + e.statusText);
            return false;
            },
        });

          return result;
          }
          
       }



        $("#language").on("change", function(e) {
          e.preventDefault();
            setData('sel_lang', $(this).val());
       
        });
         $("#agree").on("click", function(e) {

            setData($(this).attr('name'), $(this).is(":checked"));
       
        });

        $("input[type=text]").on("focusout", function(e) {
            setData($(this).attr('name'), $(this).val());
       
        });

         $("input[type=password]").on("focusout", function(e) {
            setData($(this).attr('name'), $(this).val());
       
        });

        $("input[type=radio]").on("click", function(e) {
            setData($(this).attr('name'), $(this).val());
       
        });

        $(".lang_to_install_list input[type=checkbox]").on("click", function(e) {
          var key = null;
            if($(this).is(":checked")) {
               key = 'selectLangs';
            } else {
              key = 'deselectLangs';
            }

            setData(key, $(this).val());
       
        });

        $("#smtpPanel select").on("change", function(e) {
     
            setData($(this).attr('name'), $(this).val());
        });
      </script>

{% endblock %}
