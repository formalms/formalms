

  <div class="installer-container">
      <div class="installer-title">
          {{ Get_title({
          '#' : installerTitle
        },false) }}
      </div>
    <div id="installer-section">
        {% for stepNumber,step in steps %}
        <h3>{{ step }}</h3>
        <section>
            {% include 'partials/install/step' ~ stepNumber ~'.html.twig' %}
        </section>
        {% endfor %}
    </div>
  </div>

{% block scripts %}

   <script type="text/javascript" src="{{ Layout_getPath() }}script/jquery.steps.min.js"></script>

  
    <script>
     var startIndex = {{setValues.step|json_encode|raw}};
    let wizard = $("#installer-section").steps({
        headerTag: "h3",
        bodyTag: "section",
        transitionEffect: "slideLeft",
        autoFocus: true,
        stepsOrientation: $.fn.steps.stepsOrientation.vertical,
        startIndex: parseInt(startIndex),
          /* Labels */
        labels: {
            cancel: "Cancel",
            current: "current step:",
            pagination: "Pagination",
            finish: "Finish",
            next: {{ next|json_encode|raw }},
            previous: {{ back|json_encode|raw }},
            loading: {{ loading|json_encode|raw }}
        },
          onFinished: function (event, currentIndex) {
         //Do Function
        },
         onStepChanging: function (event, currentIndex, newIndex) {
          if(newIndex > currentIndex) {
            var result = validateStep(currentIndex + 1);
            if(!result) {
              setData('step', currentIndex);
            } else {
              setData('step', newIndex);
            }

            return result;
          }
          //sto tornando indietro

       return true;
      }
    });

    
  
    </script>

      <script>

      function validateStep(index) {
        
        switch(index) {
          case 1:
            return checkPrerequisites();
          break;
          case 2:
            return checkDbSettingsAndUploadSettings();
          break;
          default:
            return true;
            break;
        }
      }


      function checkPrerequisites() {
          if($("#checkRequirements").val() && $('#agree').is(":checked")) {
            return true;
          } else {
            return false;
          }
      }

      function checkDbSettingsAndUploadSettings() {
          let uploadsettings = true;
     
          if($("input[name=uploadMethod]:checked").val() == 'ftp') {
            uploadsettings = checkFtpConnection();
          } 

          if(uploadsettings) {

            //check db connection
              
              return checkDbData();
          } else {
            return false;
          }
      }

      function checkDbData() {
        var postData = {};

        $("#database_data input").each(function(e) {
    
            postData[$(this).attr('name')] = $(this).val();
        });
           
        $.ajax({
            type: "POST",
            data: postData,
            url: window.frontend.config.url.base + "/appCore/ajax.adm_server.php?r=adm/install/checkDbData",
            success: function (data) {
              
              console.log(data);
            },
            error: function (e) {
            alert("Si è verificato un errore: \n" + e.status + " - " + e.statusText);
            return false;
            },
        });
      }

      function checkFtpConnection() {
          let checkFields = true;
              
          $("#ftp_data input").each(function(e) {
        
              if($(this).val() == '') {
                checkFields = false;
              }
          });

          return checkFields;
      }


       function setData(key, value) {
          
        var postData = {
          [key] : value
        };
           
        $.ajax({
            type: "POST",
            data: postData,
            url: window.frontend.config.url.base + "/appCore/ajax.adm_server.php?r=adm/install/set",
            success: function (data) {
              
              var result = JSON.parse(data);
              if(result.success == true && key == 'sel_lang') {
                location.reload();
              } 
            },
            error: function (e) {
            alert("Si è verificato un errore: \n" + e.status + " - " + e.statusText);
            return false;
            },
        });
      }



        $("#language").on("change", function(e) {
          e.preventDefault();
            setData('sel_lang', $(this).val());
       
        });
         $("#agree").on("click", function(e) {

            setData($(this).attr('name'), $(this).is(":checked"));
       
        });

        $("input[type=text]").on("focusout", function(e) {
            setData($(this).attr('name'), $(this).val());
       
        });

        $("input[type=radio]").on("click", function(e) {
            setData($(this).attr('name'), $(this).val());
       
        });
      </script>

{% endblock %}
